/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;


/**
 *
 * @author jonathan Miranda
 */
public class App extends javax.swing.JFrame {

    public Timer reloj;
    int cont=0;
    String Raiz = "C:";
    String exp;
    public DefaultTableModel modelo;
    
    /**
     * Creates new form App
     */
    public App() {
        initComponents();

        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Direccion");
        
        Tabla.setModel(modelo);
        reloj = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            if (cont >= 1) {
                reloj.stop();
                exp = ".*" + campo_Busqueda.getText().trim() + ".*";
                modelo = new DefaultTableModel();
                modelo.addColumn("Nombre");
                modelo.addColumn("Direccion");
                Tabla.setModel(modelo);
                Resultadoexp.setText(exp + "\n" + Resultadoexp.getText());
                busqueda(new File(Raiz));
            }
            cont++;
                
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campo_Busqueda = new javax.swing.JTextField();
        Empieza = new javax.swing.JCheckBox();
        txtEmpieza = new javax.swing.JTextField();
        Termina = new javax.swing.JCheckBox();
        txtTermina = new javax.swing.JTextField();
        Contiene = new javax.swing.JCheckBox();
        txtContiene = new javax.swing.JTextField();
        Extencion = new javax.swing.JCheckBox();
        txtExtencion = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Resultadoexp = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        btnRaiz = new javax.swing.JButton();
        btnFiltro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        campo_Busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_BusquedaActionPerformed(evt);
            }
        });
        campo_Busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campo_BusquedaKeyTyped(evt);
            }
        });

        Empieza.setText("Empieza con...");
        Empieza.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                EmpiezaStateChanged(evt);
            }
        });

        txtEmpieza.setEnabled(false);

        Termina.setText("Termina con...");
        Termina.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TerminaStateChanged(evt);
            }
        });

        txtTermina.setEnabled(false);

        Contiene.setText("Contiene...");
        Contiene.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ContieneStateChanged(evt);
            }
        });
        Contiene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContieneActionPerformed(evt);
            }
        });

        txtContiene.setEnabled(false);

        Extencion.setText("Extencion...");
        Extencion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ExtencionStateChanged(evt);
            }
        });
        Extencion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExtencionActionPerformed(evt);
            }
        });

        txtExtencion.setEnabled(false);

        Resultadoexp.setColumns(20);
        Resultadoexp.setRows(5);
        jScrollPane2.setViewportView(Resultadoexp);

        jLabel1.setText("Buscar Archivo");

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(Tabla);

        btnRaiz.setText("Raiz");
        btnRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaizActionPerformed(evt);
            }
        });

        btnFiltro.setText("Filtro");
        btnFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campo_Busqueda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRaiz, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Extencion)
                                .addGap(22, 22, 22)
                                .addComponent(txtExtencion))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Termina)
                                    .addComponent(Contiene)
                                    .addComponent(Empieza))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmpieza)
                                    .addComponent(txtContiene)
                                    .addComponent(txtTermina)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(btnFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_Busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnRaiz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Empieza)
                            .addComponent(txtEmpieza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Termina)
                            .addComponent(txtTermina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Contiene)
                            .addComponent(txtContiene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Extencion)
                            .addComponent(txtExtencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(btnFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busqueda(File direccion){
        String nombre = direccion.getName();
        System.out.println(nombre);
        if (comprobar(nombre, exp)) {
            String[] arr= new String[2];
            arr[0]= nombre;
            arr[1] = direccion.getAbsolutePath();
            modelo.addRow(arr);
        }
        try {
            if(!direccion.getAbsolutePath().contains("$Recycle.Bin")&& direccion.isDirectory()){
             File[] direcciones = direccion.listFiles();
                for (File direccione : direcciones) {
                    busqueda(direccione);
                }
         }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, e.getMessage()+ " Ruta:" + direccion.getAbsolutePath(),"Error", JOptionPane.DEFAULT_OPTION);
        }
         

    }
    private  boolean comprobar(String string, String regex){

        boolean ret = false;
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(string);
        if (matcher.matches()) {
           ret=true;
        }
        
        
        return ret;
    }
    private void campo_BusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_BusquedaKeyTyped
        if (!reloj.isRunning()) {
            reloj.start();
        }
        
        else{
            reloj.restart();
            cont=0;
        }
    }//GEN-LAST:event_campo_BusquedaKeyTyped

    private void ContieneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContieneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContieneActionPerformed

    private void ExtencionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExtencionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExtencionActionPerformed

    private void btnRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaizActionPerformed
        JFileChooser ventana_ruta = new JFileChooser(System.getProperty("user.home"));
        ventana_ruta.setDialogTitle("Seleccione el archivo a Importar");
        ventana_ruta.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int seleccion = ventana_ruta.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            Raiz = ventana_ruta.getSelectedFile().getAbsolutePath();
        }
    }//GEN-LAST:event_btnRaizActionPerformed

    private void EmpiezaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_EmpiezaStateChanged
        if (Empieza.isSelected()) {
            txtEmpieza.setEnabled(true);
            campo_Busqueda.setEnabled(false);
        }else{
            txtEmpieza.setEnabled(false);
            campo_Busqueda.setEnabled(true);
        }
    }//GEN-LAST:event_EmpiezaStateChanged

    private void campo_BusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_BusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_BusquedaActionPerformed

    private void TerminaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TerminaStateChanged
        if (Termina.isSelected()) {
            txtTermina.setEnabled(true);
            campo_Busqueda.setEnabled(false);
        }else{
            txtTermina.setEnabled(false);
            campo_Busqueda.setEnabled(true);
        }
    }//GEN-LAST:event_TerminaStateChanged

    private void ContieneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ContieneStateChanged
        if (Contiene.isSelected()) {
            txtContiene.setEnabled(true);
            campo_Busqueda.setEnabled(false);
        }else{
            txtContiene.setEnabled(false);
            campo_Busqueda.setEnabled(true);
        }
    }//GEN-LAST:event_ContieneStateChanged

    private void ExtencionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ExtencionStateChanged
        if (Extencion.isSelected()) {
            txtExtencion.setEnabled(true);
            campo_Busqueda.setEnabled(false);
        }else{
            txtExtencion.setEnabled(false);
            campo_Busqueda.setEnabled(true);
        }
    }//GEN-LAST:event_ExtencionStateChanged

    private void btnFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroActionPerformed
        exp = condiciones();
        campo_Busqueda.setText(exp.trim());
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Direccion");
        Tabla.setModel(modelo);
        busqueda(new File(Raiz));
    }//GEN-LAST:event_btnFiltroActionPerformed
    
    private String condiciones(){
        String expre = "";
        if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0 && !Termina.isSelected() && !Contiene.isSelected() && !Extencion.isSelected()) { //Solo empieza
            expre = txtEmpieza.getText().trim() + ".*";
        }else if (!Empieza.isSelected() && txtTermina.getText().trim().length()!=0 && Termina.isSelected() && !Contiene.isSelected() && !Extencion.isSelected()) {//solo termina
            expre = ".*" + txtTermina.getText().trim() + "(\\..*)?";
        }else if (!Empieza.isSelected() && txtContiene.getText().trim().length()!=0 && !Termina.isSelected() && Contiene.isSelected() && !Extencion.isSelected()) {//solo contiene
            expre = ".*" + txtContiene.getText().trim() + ".*";
        }else if (!Empieza.isSelected() && txtExtencion.getText().trim().length()!=0 && !Termina.isSelected() && !Contiene.isSelected() && Extencion.isSelected()) {//solo extencion
            expre = ".*\\." + txtExtencion.getText().trim();
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0 && txtTermina.getText().trim().length()!=0 && Termina.isSelected() && !Contiene.isSelected() && !Extencion.isSelected()) {// empieza y termina
            expre = txtEmpieza.getText().trim() + ".*" + txtTermina.getText().trim() + "(\\..*)?";
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0 && txtContiene.getText().trim().length()!=0 && !Termina.isSelected() && Contiene.isSelected() && !Extencion.isSelected()) {// empieza y contiene
            expre = txtEmpieza.getText().trim() + ".*" + txtContiene.getText().trim() + ".*(\\..*)?";
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && !Termina.isSelected() && !Contiene.isSelected() && Extencion.isSelected()) {// empieza y extencion
            expre = txtEmpieza.getText().trim() + ".*\\." + txtExtencion.getText().trim();
        }else if (!Empieza.isSelected() && txtContiene.getText().trim().length()!=0 && txtTermina.getText().trim().length()!=0 && Termina.isSelected() && Contiene.isSelected() && !Extencion.isSelected()) {//termina y contiene
            expre = ".*" + txtContiene.getText().trim() + ".*" + txtTermina.getText().trim() + "(\\..*)?";
        }else if (!Empieza.isSelected() && txtExtencion.getText().trim().length()!=0 && txtTermina.getText().trim().length()!=0 && Termina.isSelected() && !Contiene.isSelected() && Extencion.isSelected()) {//termina y extencion
            expre = ".*" + txtTermina.getText().trim() + "\\." + txtExtencion.getText().trim();
        }else if (!Empieza.isSelected() && txtExtencion.getText().trim().length()!=0 && txtContiene.getText().trim().length()!=0 && !Termina.isSelected() && Contiene.isSelected() && Extencion.isSelected()) {//contiene y extencion
            expre = ".*" + txtContiene.getText().trim() + ".*\\." + txtExtencion.getText().trim();
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0&& txtTermina.getText().trim().length()!=0 && txtContiene.getText().trim().length()!=0 && Termina.isSelected() && Contiene.isSelected() && !Extencion.isSelected()) {//empieza, contiene y termina
            expre = txtEmpieza.getText().trim()+ ".*" + txtExtencion.getText().trim() + ".*" + txtTermina.getText().trim() + "(\\..*)?";
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0&& txtTermina.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && Termina.isSelected() && !Contiene.isSelected() && Extencion.isSelected()) {//empieza, termina y extencion
            expre = txtEmpieza.getText().trim()+ ".*" + txtTermina.getText().trim() + "\\.*" + txtExtencion.getText().trim();
        }else if (Empieza.isSelected() && txtEmpieza.getText().trim().length()!=0&& txtContiene.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && !Termina.isSelected() && Contiene.isSelected() && Extencion.isSelected()) {//empieza, contiene y extencion
            expre = txtEmpieza.getText().trim()+ ".*" + txtContiene.getText().trim() + ".*"  + "\\." + txtExtencion;
        }else if (!Empieza.isSelected() && txtContiene.getText().trim().length()!=0&& txtTermina.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && Termina.isSelected() && Contiene.isSelected() && Extencion.isSelected()) {//termina, contiene y extencion
            expre =  ".*" + txtContiene.getText().trim() + ".*" + txtTermina.getText().trim() + "\\." + txtExtencion;
        }else if (!Empieza.isSelected() && txtContiene.getText().trim().length()!=0&& txtTermina.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && Termina.isSelected() && Contiene.isSelected() && Extencion.isSelected()) {//termina, contiene y extencion
            expre =  ".*" + txtContiene.getText().trim() + ".*" + txtTermina.getText().trim() + "\\." + txtExtencion;
        }else if (Empieza.isSelected() && txtContiene.getText().trim().length()!=0 && txtEmpieza.getText().trim().length()!=0&& txtTermina.getText().trim().length()!=0 && txtExtencion.getText().trim().length()!=0 && Termina.isSelected() && Contiene.isSelected() && Extencion.isSelected()) {//empieza, termina, contiene y extencion
            expre =  txtEmpieza.getText().trim() + ".*" + txtContiene.getText().trim() + ".*" + txtTermina.getText().trim() + "\\." + txtExtencion;
        }
        
        return expre;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Contiene;
    private javax.swing.JCheckBox Empieza;
    private javax.swing.JCheckBox Extencion;
    private javax.swing.JTextArea Resultadoexp;
    private javax.swing.JTable Tabla;
    private javax.swing.JCheckBox Termina;
    private javax.swing.JButton btnFiltro;
    private javax.swing.JButton btnRaiz;
    private javax.swing.JTextField campo_Busqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtContiene;
    private javax.swing.JTextField txtEmpieza;
    private javax.swing.JTextField txtExtencion;
    private javax.swing.JTextField txtTermina;
    // End of variables declaration//GEN-END:variables
}
